/* =============================================
   1. Grundlegende Seiten-Einstellungen (Reset)
   ---------------------------------------------
   - Entfernt Standard-Abstände des Browsers
   - Definiert die Haupt-Schriftart für alle Texte
   - Setzt die Hintergrundfarbe der gesamten Seite
   - Legt die Standard-Textfarbe fest
   ============================================= */

html, body {                                 /* Diese Regeln gelten für das gesamte Dokument */
  margin: 0;                                /* Entfernt den Standard-Außenabstand (weißer Rand) um die Seite */
  padding: 0;                               /* Entfernt den Standard-Innenabstand im <body> */
  font-family: system-ui, sans-serif;       /* Nutzt moderne System-Schriftarten (z.B. Apple, Windows, Android),
                                               wenn nicht verfügbar, dann eine serifenlose Ersatz-Schrift */
  background: #F6F5F1;                      /* Setzt eine dezente, helle Hintergrundfarbe für die ganze Seite */
  color: #222;                              /* Standard-Textfarbe auf dunkles Grau (#222) gesetzt für gute Lesbarkeit */
}


/* =============================================================
   2. Header und Navigation (Desktop-Ansicht)
   -------------------------------------------------------------
   - Stellt den oberen Seitenbereich (Header) dar
   - Beinhaltet Logo, Navigation und Social Icons
   - Layout und Optik für große Bildschirme (Desktop)
   ============================================================= */

.site-header {
  display: flex;                     /* Flexbox: Richtet Header-Inhalt (Logo, Navigation, Icons) nebeneinander aus */
  align-items: center;               /* Vertikal mittig innerhalb des Headers */
  justify-content: space-between;    /* Maximale Verteilung: Logo links, Navigation mittig, Icons rechts */
  /* border-bottom: 2px solid #222; */ /* Optional: Untere Trennlinie für Header */
  padding: 0.5rem 1rem;              /* Abstand oben/unten: 0.5rem, rechts/links: 1rem (verhindert, dass der Inhalt am Rand klebt) */
}

.logo img {
  height: 90px;                      /* Logo bleibt immer 90px hoch, Breite passt sich automatisch an */
}

.site-nav ul {
  display: flex;                     /* Navigation als horizontale Leiste */
  list-style: none;                  /* Entfernt die Standard-Punkte der Liste */
  gap: 2rem;                         /* Abstand zwischen den einzelnen Navigationslinks */
  margin: 0;                         /* Kein zusätzlicher Außenabstand */
  padding: 0;                        /* Kein zusätzlicher Innenabstand */
}

.site-nav a {
  text-decoration: none;             /* Unterstreicht die Links NICHT */
  color: #222;                       /* Dunkelgraue Schrift für die Navigation */
  font-weight: bold;                 /* Links fett anzeigen */
}

.site-nav a.active {
  color: #AA0600;                    /* Aktiver (gewählter) Navigationslink: auffälliges Orange/Rot */
}

/* Social Icons rechts im Header */
.social-icons {
  display: flex;                     /* Icons nebeneinander anordnen */
  align-items: center;               /* Vertikal zentrieren */
  gap: 1rem;                         /* 1rem Abstand zwischen den Icons */
}

/* Einzelnes Icon als Link (umfasst jeweils zwei Bilder: normal und hover) */
.icon-link {
  display: inline-block;             /* Jedes Icon nebeneinander platzieren wie Text */
  position: relative;                /* Kind-Elemente (Bilder) können absolut positioniert werden */
  width: 34px;                       /* Breite für das Icon (bei Bedarf je nach Icon anpassen) */
  height: 30px;                      /* Höhe für das Icon */
  overflow: hidden;                  /* Verhindert, dass größere Bilder herausragen */
  vertical-align: middle;            /* Zentriert Icon mit Text (falls daneben) */
}

.icon-link .icon-img {
  position: absolute;                /* Legt das Bild exakt im Container (icon-link) ab */
  top: 0; left: 0;                   /* Oben links ausrichten */
  width: 100%;                       /* Bild füllt immer die volle Containerbreite */
  height: 100%;                      /* Bild füllt die volle Containerhöhe */
  object-fit: contain;               /* Bild bleibt immer vollständig sichtbar (egal ob quadratisch oder quer) */
  transition: opacity 0.2s;          /* Weicher Übergang beim Ein-/Ausblenden (z.B. beim Hover) */
  display: block;                    /* Entfernt eventuellen Abstand unter dem Bild */
}

/* Hover-Icon ist unsichtbar und nicht anklickbar (außer beim Hover auf das Eltern-Element) */
.icon-link .hover   { 
  opacity: 0;                        /* Unsichtbar */
  pointer-events: none;              /* Mausereignisse ignorieren (verhindert z.B. versehentliche Klicks) */
}
/* Sobald das Icon „gehovered“ wird, wird das Hover-Bild eingeblendet... */
.icon-link:hover .hover { 
  opacity: 1;                        /* ... und sichtbar */
  pointer-events: auto;              /* (optional, falls das Hover-Bild mal klickbar sein soll) */
}
/* ... und das normale Bild wird unsichtbar */
.icon-link:hover .normal { 
  opacity: 0;                        /* Blendet das Standard-Icon aus */
}


/* ===========================================================
   3. Hauptbereich (Main Content)
   -----------------------------------------------------------
   - Gestaltet den Haupt-Inhaltsbereich der Seite (alles unter dem Header)
   =========================================================== */

main {
  max-width: 1200px;        /* Begrenzung der maximalen Breite – sieht zentriert und gut lesbar aus */
  margin: 2rem auto;        /* Oben und unten 2rem Abstand, links/rechts automatisch mittig (zentriert) */
  padding: 0 1rem;          /* Innenabstand nach links/rechts, damit der Text nicht am Rand klebt */
}

.intro { 
  margin-bottom: 2rem;      /* Abstand nach unten unter dem Intro-Block (Begrüßung etc.) */
}
.intro .underline { 
  text-decoration: none;    /* Unterstreicht den Text im Element mit der Klasse "underline" NICHT (kann als Stil verwendet werden) */
}

/* ===========================================================
   4. Blog-Grid und Blog-Karten
   -----------------------------------------------------------
   - Layout und Aussehen für Blog-Listen und Blogkarten
   =========================================================== */

/* Grid für Blog-Teaser oder Blog-Übersicht */
.blog-teaser-grid, .blog-grid {
  display: flex;            /* Zeigt alle Blogkarten nebeneinander als Flexbox */
  flex-wrap: wrap;          /* Karten umbrechen automatisch in die nächste Zeile bei wenig Platz */
  gap: 0rem 1rem;           /* Vertikal kein Abstand, horizontal 1rem Abstand zwischen Karten */
  margin-bottom: 2rem;      /* Abstand unterhalb des gesamten Grids */
  justify-content: center;  /* Grid wird zentriert, Karten erscheinen in der Mitte */
}

/* Einzelansicht (alle Blogkarten untereinander in einer Spalte) */
.blog-grid-single {
  flex-direction: column;   /* Stapelt die Karten untereinander (vertikal) */
  align-items: center;      /* Karten in der Mitte ausrichten */
}

/* Einzelne Blogkarte (Artikel-Vorschau) */
.blog-card {
  flex: 1 1 300px;          /* Karte kann wachsen, ist aber mindestens 300px breit */
  box-sizing: border-box;   /* Padding und Border werden zur Breite dazugerechnet */
  background: #FCFBF7;         /* Weiße Kartenfläche */
  border: 2px solid #C9C8C8;   /* Dezenter, grauer Rahmen */
  border-radius: 7px;       /* Abgerundete Ecken */
  display: flex;            /* Bild und Inhalt nebeneinander */
  align-items: center;      /* Bild und Text oben bündig */
  padding: 0.25rem;         /* Etwas Innenabstand rundherum */
  min-width: 250px;         /* Mindestbreite der Karte */
  max-width: 350px;         /* Maximalbreite der Karte */
  margin-bottom: 1rem;      /* Abstand nach unten zur nächsten Karte */
  transition: border-color .2s; /* Weicher Übergang bei Farbumschlag (z.B. bei aktiver Karte) */
}

/* Bildbereich (links in der Karte) – kann auch als Platzhalter dienen */
.blog-card .card-img {
  min-width: 120px;         /* Bildbereich hat immer mindestens 120px Breite */
  min-height: 120px;        /* ... und mindestens 120px Höhe */
  /*background: #f3f3f3;      /* Hellgrauer Hintergrund, falls kein Bild da ist */
  display: flex;            /* Bild/Text im Inneren zentrieren */
  align-items: center;      /* Vertikal zentriert */
  justify-content: center;  /* Horizontal zentriert */
  font-size: 2rem;          /* Große Schriftgröße, falls Platzhalter-Text ("Bild") angezeigt wird */
  font-weight: bold;        /* Platzhalter fett dargestellt */
  margin-right: 1rem;       /* Abstand rechts zum Textbereich */
  /*border: 2px solid #9e9e9e;/* Rahmen um das Bild/Platzhalter */
}

/* Bild selbst in der Karte */
.blog-card .card-img img {
  max-width: 120px;         /* Bild ist maximal 120px breit (passt in Platzhaltergröße) */
  object-fit: cover;        /* Bild schneidet sich ggf. zu, um den Bereich auszufüllen */
  border-radius: 4px;       /* Bild hat leicht abgerundete Ecken */
  display: block;           /* Kein unerwünschter Abstand unter dem Bild */
}

/* Titel im Karten-Inhalt */
.blog-card .card-title {
  font-weight: bold;                 /* Titel immer fett */
  margin-bottom: 0.5rem;             /* Abstand nach unten */
  color: #009C6C !important;         /* Akzentfarbe für den Titel (Grün) */
  text-decoration: none !important;  /* Keine Unterstreichung */
}

/* Vorschautext zum Blogartikel */
.blog-card .card-desc {
  font-size: 1rem;                   /* Normale Schriftgröße */
  color: #444;                       /* Etwas helleres Grau */
}

/* Vorschautext nur auf maximal 4 Zeilen beschränken, Rest abschneiden */
.card-desc {
  display: -webkit-box;              /* Ermöglicht den "line-clamp" Effekt in Webkit-Browsern */
  -webkit-line-clamp: 4;             /* Maximal 4 Zeilen anzeigen */
  -webkit-box-orient: vertical;      /* Box vertikal anordnen */
  overflow: hidden;                  /* Überschüssigen Text abschneiden */
  text-overflow: ellipsis;           /* "..." falls Text abgeschnitten wird */
}

/* Aktive Blogkarte (z.B. ausgewählt) */
.blog-card.active { border-color: #009C6C; }        /* Rahmen wird grün */
.blog-card.active .card-title { color: #009C6C; font-weight: bold; } /* Titel bleibt grün und fett */


/* =============================================================
   5. Blogpost-Layout: Zweispaltige Ansicht für Sidebar & Content
   -------------------------------------------------------------
   Nutzt Flexbox für einen modernen zweispaltigen Blogaufbau.
   ============================================================= */

.blog-layout {
  display: flex;        /* Macht aus .blog-layout einen Flex-Container (horizontale Aufteilung) */
  gap: 2rem;            /* 2rem Abstand zwischen Sidebar und Hauptinhalt */
}

.blog-sidebar { 
  flex: 1 1 350px;      /* Sidebar: nimmt minimal 1 Anteil, darf wachsen/schrumpfen, Startbreite 350px */
}
.blog-content { 
  flex: 3 1 600px;      /* Hauptinhalt: nimmt 3 Anteile, darf wachsen/schrumpfen, Startbreite 600px */
}

/* =============================================================
   6. Footer – Fußzeile der Seite
   -------------------------------------------------------------
   Gestaltet den unteren Bereich der Seite dezent und mittig.
   ============================================================= */

footer {
  text-align: center;        /* Text zentrieren */
  font-size: 0.9rem;         /* Schrift etwas kleiner als Standard */
  color: #666;               /* Graue Schrift – weniger prominent */
  margin: 2rem 0 1rem 0;     /* Abstand oben 2rem, unten 1rem, keine Abstände an den Seiten */
}
.footer-links { 
  margin-bottom: 0.5rem;     /* Abstand nach unten zu weiteren Footer-Inhalten */
}

/* =============================================================
   7. Responsive Design & Mobile-Menü (Bildschirme ≤ 900px)
   -------------------------------------------------------------
   Alle wichtigen Anpassungen, damit die Seite auch auf Tablets & kleinen Displays funktioniert!
   ============================================================= */

@media (max-width: 900px) {
  /* Blog-Listen untereinander anordnen und zentrieren */
  .blog-teaser-grid, .blog-grid {
    flex-direction: column;      /* Karten stapeln sich vertikal */
    align-items: center;         /* Karten werden mittig ausgerichtet */
  }

  /* Seitenlayout: Sidebar unter dem Content anordnen (bzw. ausblenden) */
  .blog-layout { flex-direction: column; } /* Von horizontal auf vertikal */
  .blog-sidebar { display: none; }         /* Sidebar ganz ausblenden (mehr Platz für Content) */
  .blog-content { width: 100%; }           /* Hauptbereich nutzt die volle Breite */

  /* Header-Navigation und Social Icons werden versteckt (Platz sparen) */
  .site-nav, .site-header .social-icons { display: none; }

  /* Burger-Menü wird jetzt sichtbar (Navigation via Overlay) */
  .burger { display: block !important; }

  /* Das Overlay-Menü für Mobile ist standardmäßig unsichtbar, 
     wird aber durch die Klasse .open eingeblendet */
  .mobile-menu-overlay { display: none; }
  .mobile-menu-overlay.open { display: flex; }

  /* Blogkarten bekommen dynamische Breite, passen sich ans Display an */
  .blog-card {
    min-width: unset;            /* Mindestbreite aufheben */
    max-width: 95vw;             /* Maximal 95% der Viewport-Breite */
    width: 95vw;                 /* Genau 95% der Viewport-Breite */
    box-sizing: border-box;      /* Padding/Border zählen zur Breite */
    padding: 0.5rem;             /* Weniger Innenabstand, wirkt kompakter */
  }

  /* Startseiten-Karten besonders breit darstellen, aber nie größer als 600px */
  .blog-teaser-grid .blog-card {
    max-width: 600px !important;       /* Nie größer als 600px */
    width: 100%;                       /* Nimmt volle verfügbare Breite */
    min-width: unset !important;        /* Mindestbreite aufheben */
    margin-left: auto;                  /* Links und rechts zentriert */
    margin-right: auto;
  }
}


/* ===========================
   8. Feine Mobile-Anpassungen (bis 600px)
   =========================== */
@media (max-width: 600px) {
  .icon-link { width: 24px; }
  .icon-img { height: 24px; }
  .site-header { flex-direction: row; gap: 0; }
  .blog-card { padding: 0.25rem; }
  /* Nochmals Header-Inhalte ausblenden auf sehr kleinen Screens */
  .site-nav, .site-header .social-icons { display: none; }
  .burger { display: block important; }
  .mobile-menu-overlay { display: none; }
  .mobile-menu-overlay.open { display: flex; }
}

/* ===========================
   9. Burger-Menü (Button für Mobile)
   =========================== */
.burger {
  display: none;
  background: none;
  border: none;
  width: 36px;
  height: 36px;
  cursor: pointer;
  position: relative;
  z-index: 11;
}
.burger::before,
.burger::after,
.burger span {
  content: '';
  display: block;
  background: #008000;
  height: 4px;
  border-radius: 2px;
  position: absolute;
  left: 8px;
  right: 8px;
  transition: all 0.3s;
}
.burger::before { top: 12px; }
.burger span { top: 18px; }
.burger::after { top: 24px; }
.burger.open span { opacity: 0; }
.burger.open::before { transform: rotate(45deg); top: 18px; }
.burger.open::after { transform: rotate(-45deg); top: 18px; }

/* ===========================
   10. Mobile Menü-Overlay (ausklappbares Menü)
   =========================== */
.mobile-menu-overlay {
  display: none;
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: #fff;
  z-index: 10;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding-top: 4rem;
  overflow-y: auto;
}
.mobile-menu-overlay.open { display: flex; }

/* Body-Scroll verhindern, wenn Menü offen */
body.noscroll { overflow: hidden; }

.mobile-menu-overlay .blog-card {
  max-width: 92vw !important;
  width: 92vw !important;
  min-width: unset !important;
  margin-left: auto;
  margin-right: auto;
}
.blog-grid-single .blog-card {
  flex: none !important;
  min-width: 250px;
  max-width: 600px;
  width: 100%;
  min-height: 0 !important;
  height: auto !important;
  margin-bottom: 0.5rem;
}
.blog-card {
  border: none !important;
  flex: none !important;
  min-width: 250px;
  max-width: 350px;
  width: 100%;
  min-height: 0 !important;
  height: auto !important;
  margin-bottom: 1rem
}
.blog-teaser-grid .blog-card {
  border: 2px solid #222 !important;
}
